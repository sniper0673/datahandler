name: Publish to PyPI

on:
  push:
    tags:
      - 'v*'  # v로 시작하는 태그를 푸시하면 실행 (예: v0.1.0)

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      # 1. 저장소 체크아웃
      - uses: actions/checkout@v3

      # (선택 사항) 파일 구조 확인을 위한 디버깅 스텝
      # 이 스텝을 추가하여 워크플로우 실행 중 파일들이 어디에 있는지 확인할 수 있습니다.
      - name: List files for debugging
        run: ls -R

      # 2. 파이썬 환경 설정
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # 3. 빌드 툴 설치
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          # 필요한 모든 빌드 도구를 한 번에 설치하고 업그레이드합니다.
          pip install --upgrade setuptools wheel build twine pkginfo

      # 4. 패키지 빌드
      # 패키지 파일들이 루트에 위치하므로 working-directory를 지정할 필요가 없습니다.
      - name: Build package
        run: python -m build

      # 5. PyPI로 업로드
      # pypa/gh-action-pypi-publish 액션도 루트 디렉토리에서 dist/ 폴더를 찾습니다.
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.8.8
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          # dist/ 폴더가 루트에 생성되므로 working_directory를 지정할 필요가 없습니다.
